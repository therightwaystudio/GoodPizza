package com.example.romanovsky_m.testproject.Database;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import com.example.romanovsky_m.testproject.Database.CategoryDB;
import com.example.romanovsky_m.testproject.Database.OfferDB;
import com.example.romanovsky_m.testproject.Database.ParamDB;

import com.example.romanovsky_m.testproject.Database.CategoryDBDao;
import com.example.romanovsky_m.testproject.Database.OfferDBDao;
import com.example.romanovsky_m.testproject.Database.ParamDBDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig categoryDBDaoConfig;
    private final DaoConfig offerDBDaoConfig;
    private final DaoConfig paramDBDaoConfig;

    private final CategoryDBDao categoryDBDao;
    private final OfferDBDao offerDBDao;
    private final ParamDBDao paramDBDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        categoryDBDaoConfig = daoConfigMap.get(CategoryDBDao.class).clone();
        categoryDBDaoConfig.initIdentityScope(type);

        offerDBDaoConfig = daoConfigMap.get(OfferDBDao.class).clone();
        offerDBDaoConfig.initIdentityScope(type);

        paramDBDaoConfig = daoConfigMap.get(ParamDBDao.class).clone();
        paramDBDaoConfig.initIdentityScope(type);

        categoryDBDao = new CategoryDBDao(categoryDBDaoConfig, this);
        offerDBDao = new OfferDBDao(offerDBDaoConfig, this);
        paramDBDao = new ParamDBDao(paramDBDaoConfig, this);

        registerDao(CategoryDB.class, categoryDBDao);
        registerDao(OfferDB.class, offerDBDao);
        registerDao(ParamDB.class, paramDBDao);
    }
    
    public void clear() {
        categoryDBDaoConfig.clearIdentityScope();
        offerDBDaoConfig.clearIdentityScope();
        paramDBDaoConfig.clearIdentityScope();
    }

    public CategoryDBDao getCategoryDBDao() {
        return categoryDBDao;
    }

    public OfferDBDao getOfferDBDao() {
        return offerDBDao;
    }

    public ParamDBDao getParamDBDao() {
        return paramDBDao;
    }

}
